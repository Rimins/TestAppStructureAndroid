// Top-level build file where you can add configuration options common to all sub-projects/modules.

//if (System.getenv("KEYSTOREPROPSPATH") == null) {
//    throw new InvalidUserDataException("Environment variable KEYSTOREPROPSPATH not found")
//}
//
//def keystorePropertiesFile = rootProject.file(System.getenv("KEYSTOREPROPSPATH"))
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

buildscript {
    ext {
        versionCode = 1
        minSdkVersion = 23
        targetSdkVersion = 28
        compileSdkVersion = 28
        buildToolsVersion = "28.0.0"
        // JAVA & Kotlin
        javaVersion = "1.7"
        kotlinVersion = "1.2.50"
        kotlinCompilerJavaVersion = "1.6"
        // Android plugin
        gradleAndroidPluginVersion = "3.1.3"
        // android x (support and other libs)
        supportLibVersion = "27.1.1"
        constraintLayoutVersion = "1.1.0"
        archLifecycleVersion = "1.1.1"

        // 3 party libs //
        daggerVersion = "2.16"
        gsonVersion = "2.8.4"
        apacheCsvVersion = "1.0"
        jodaTimeVersion = "2.9"
        jodaTimeAndroidVersion = "2.9.9.4"
        timberVersion = "4.7.0"
        picassoVersion = "2.71828"
        // network
        retrofitVersion = "2.4.0"
        okHttpVersion = "3.10.0"
        okHttpStatsVersion = "1.1.1"
        // rx
        rxJavaVersion = "2.1.14"
        rxKotlinVersion = "2.2.0"
        rxAndroidVersion = "2.0.2"
        rxRelayVersion = "2.0.0"
        // android tests
        runnerVersion = "1.0.1"
        rulesVersion = "1.0.1"
        hamcrestVersion = "1.3"
        mockitoVersion = "2.12.0"
        mockitoKotlinVersion = "1.5.0"
        junitVersion = "4.12"
        // google play keystore
//        keystoreProperties = new Properties()

        // Build number and version name
        def getBuildNumber = {
            def buildNumber = project.hasProperty('bambooBuildNumber') ? bambooBuildNumber : "1"
            println "BuildNumber is set to $buildNumber"
            return buildNumber
        }

        def getVersionName = {
            def versionName = ""
            def proc = "git rev-parse --abbrev-ref HEAD".execute()
            proc.in.eachLine { line -> versionName = line }
            proc.err.eachLine { line -> println line }
            proc.waitFor()
            if (versionName.startsWith("release/")) {
                versionName = versionName.replaceFirst("release/", "")
            } else if (versionName.startsWith('hotfix/')) {
                versionName.replaceFirst('release/', '')
            }
            println "VersionName is set to $versionName"
            return versionName
        }

        versionName = project.hasProperty('bambooVersionName') ? bambooVersionName : getVersionName()
        buildNumber = getBuildNumber()
    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradleAndroidPluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlinVersion"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
